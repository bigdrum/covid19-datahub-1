{"version":3,"sources":["webpack:///./src/components/UpdateRoll.js","webpack:///./src/templates/index-page.js"],"names":["UpdateRoll","data","articles","allMarkdownRemark","edges","map","artData","art","node","frontmatter","key","id","to","fields","pathname","title","query","render","IndexPageCore","config","errors","pageIndexYml","highlightAreas","area","apiCode","apiData","allCovid19Country","find","edge","CountryCode","link","name","TotalConfirmed","NewConfirmed","href","Page","makePage","pageQuery"],"mappings":"y+OAGMA,EAAa,SAAAC,GAAS,IAAD,MACnBC,EAAQ,UAAGD,SAAH,UAAGA,EAAMA,YAAT,iBAAG,EAAYE,yBAAf,aAAG,EAA+BC,aAAlC,QAA2C,GACzD,OACE,6BACGF,EAASG,KAAI,SAAAC,GAAY,IAAD,QACjBC,EAAMD,SAAH,UAAGA,EAASE,YAAZ,aAAG,EAAeC,YAC3B,OACE,kBAAC,IAAD,CAAMC,IAAKJ,SAAF,UAAEA,EAASE,YAAX,aAAE,EAAeG,GAAIC,GAAIN,SAAF,UAAEA,EAASE,YAAX,iBAAE,EAAeK,cAAjB,aAAE,EAAuBC,UACvD,4BAAKP,aAAL,EAAKA,EAAKQ,aAQP,oBACb,kBAAC,IAAD,CACEC,MAAK,aA+BLC,OAAQ,SAAAhB,GACN,OAAO,kBAAC,EAAD,CAAYA,KAAMA,KAjC7B,U,oGCfK,IAAMiB,EAAgB,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,KACxBkB,GAD2C,EAAbC,OACrBnB,EAAKoB,cAOpB,OACE,6BACE,6BACE,4CACA,6BACGF,EAAOG,eAAejB,KAAI,SAAAkB,GACzB,IAZUC,EAAY,IAYhBC,GAZID,EAYiBD,EAAKC,QAXxC,UAAOvB,EAAKyB,kBAAkBtB,MAAMuB,MAAK,SAAAC,GACvC,OAAOA,EAAKpB,KAAKP,KAAK4B,cAAgBL,YADxC,iBAAO,EAEHhB,YAFJ,aAAO,EAEGP,MAUF,OACE,yBAAKS,IAAKa,EAAKO,MACb,kBAAC,IAAD,CAAMlB,GAAIW,EAAKO,MACZP,EAAKQ,MAER,oCAAUN,aAAV,EAAUA,EAASO,gBACnB,oCAAUP,aAAV,EAAUA,EAASQ,oBAM7B,6BACE,6BACE,kBAAC,IAAD,CAAMrB,GAAG,YAAT,OAIA,sCAEF,uBAAGsB,KAAK,KAAR,YAEF,6BACE,oCACA,kBAAC,EAAD,SAMFC,EAAOC,YAASlB,GAGTmB,GAFEF,YAEO","file":"component---src-templates-index-page-js-e4aba0ff1f7273a63f12.js","sourcesContent":["import { Link, graphql, StaticQuery } from \"gatsby\";\nimport React from \"react\";\n\nconst UpdateRoll = data => {\n  const articles = data?.data?.allMarkdownRemark?.edges ?? [];\n  return (\n    <div>\n      {articles.map(artData => {\n        const art = artData?.node?.frontmatter;\n        return (\n          <Link key={artData?.node?.id} to={artData?.node?.fields?.pathname}>\n            <h2>{art?.title}</h2>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query UpdateRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"update-page\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                pathname\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return <UpdateRoll data={data} />;\n    }}\n  />\n);\n","import React from \"react\";\nimport UpdateRoll from \"../components/UpdateRoll\";\nimport { makePage } from \"../components/Layout\";\nimport { graphql, Link } from \"gatsby\";\n\nexport const IndexPageCore = ({ data, errors }) => {\n  const config = data.pageIndexYml;\n  const getApiData = (apiCode) => {\n    return data.allCovid19Country.edges.find(edge => {\n      return edge.node.data.CountryCode === apiCode;\n    })?.node?.data;\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>全球院校追踪lalala</h1>\n        <div>\n          {config.highlightAreas.map(area => {\n            const apiData = getApiData(area.apiCode);\n            return (\n              <div key={area.link}>\n                <Link to={area.link} >\n                  {area.name}\n                </Link>\n                <div>累计: {apiData?.TotalConfirmed}</div>\n                <div>最新: {apiData?.NewConfirmed}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div>\n        <div>\n          <Link to='/article'>\n\n            资料区\n          </Link>\n          <div>政策汇总</div>\n        </div>\n        <a href=\"/\">留学生问题征集</a>\n      </div>\n      <div>\n        <h1>全球资讯</h1>\n        <UpdateRoll />\n      </div>\n    </div>\n  );\n};\n\nconst Page = makePage(IndexPageCore);\nexport default Page;\n\nexport const pageQuery = graphql`\n  query IndedxPage($apiCodes: [String]) {\n    pageIndexYml {\n      highlightAreas {\n        name\n        link\n        apiCode\n      }\n    }\n    allCovid19Country(filter: {data: {CountryCode: {in: $apiCodes}}}) {\n      edges {\n        node {\n          data {\n            Country\n            CountryCode\n            Slug\n            NewConfirmed\n            TotalConfirmed\n          }\n        }\n      }\n    }\n    # covid19Summary(Countries: { elemMatch: { TotalConfirmed: { gt: 0 } } }) {\n    #   Countries {\n    #     Country\n    #     NewConfirmed\n    #     TotalConfirmed\n    #     Slug\n    #     NewDeaths\n    #   }\n    # }\n  }\n`;\n"],"sourceRoot":""}